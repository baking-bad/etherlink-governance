{ parameter
    (or (string %vote) (or (set %upvote_proposal key_hash) (set %new_proposal key_hash))) ;
  storage
    (pair (pair %config
             (nat %started_at_level)
             (nat %period_length)
             (nat %upvoting_limit)
             (option %proposers_governance_contract address)
             (nat %scale)
             (nat %proposal_quorum)
             (nat %promotion_quorum)
             (nat %promotion_supermajority))
          (option %voting_context
             (pair (nat %period_index)
                   (or %period
                      (pair %proposal
                         (big_map %upvoters_upvotes_count key_hash nat)
                         (big_map %upvoters_proposals (pair key_hash bytes) unit)
                         (big_map %proposals
                            bytes
                            (pair (set %payload key_hash) (key_hash %proposer) (nat %upvotes_voting_power)))
                         (option %max_upvotes_voting_power nat)
                         (option %winner_candidate (set key_hash))
                         (nat %total_voting_power))
                      (pair %promotion
                         (big_map %voters key_hash string)
                         (nat %yea_voting_power)
                         (nat %nay_voting_power)
                         (nat %pass_voting_power)
                         (nat %total_voting_power)
                         (set %winner_candidate key_hash)))))
          (option %last_winner (set key_hash))
          (big_map %metadata string bytes)) ;
  code { PUSH string "NOT_PROPOSAL_PERIOD" ;
         LAMBDA
           address
           key_hash
           { DUP ;
             PACK ;
             PUSH bytes 0x00 ;
             DUP 2 ;
             PUSH nat 1 ;
             PUSH nat 6 ;
             SLICE ;
             IF_NONE { PUSH string "SLICE" ; FAILWITH } {} ;
             COMPARE ;
             EQ ;
             IF {} { PUSH string "NOT_IMPLICIT_ADDRESS" ; FAILWITH } ;
             PUSH bytes 0x ;
             NIL bytes ;
             DUP 3 ;
             PUSH nat 21 ;
             PUSH nat 7 ;
             SLICE ;
             IF_NONE { PUSH string "SLICE" ; FAILWITH } {} ;
             CONS ;
             PUSH bytes 0x00000015 ;
             CONS ;
             DIG 2 ;
             PUSH nat 2 ;
             PUSH nat 0 ;
             SLICE ;
             IF_NONE { PUSH string "SLICE" ; FAILWITH } {} ;
             CONS ;
             NIL bytes ;
             SWAP ;
             ITER { CONS } ;
             ITER { CONCAT } ;
             UNPACK key_hash ;
             PUSH string "FAILED_TO_CAST_ADDRESS_TO_KEY_HASH" ;
             SWAP ;
             IF_NONE { FAILWITH } { SWAP ; DROP } ;
             PUSH string "KEY_HASH_NOT_EQUAL_TO_SOURCE_ADDRESS" ;
             DIG 2 ;
             DUP 3 ;
             IMPLICIT_ACCOUNT ;
             ADDRESS ;
             COMPARE ;
             EQ ;
             IF { DROP } { FAILWITH } } ;
         LAMBDA
           unit
           unit
           { DROP ;
             PUSH string "TEZ_IN_TRANSACTION_DISALLOWED" ;
             PUSH mutez 0 ;
             AMOUNT ;
             COMPARE ;
             EQ ;
             IF { DROP ; UNIT } { FAILWITH } } ;
         LAMBDA
           nat
           unit
           { PUSH nat 0 ;
             SWAP ;
             COMPARE ;
             GT ;
             IF { UNIT } { PUSH string "NO_VOTING_POWER" ; FAILWITH } } ;
         LAMBDA
           (pair nat nat nat (option address) nat nat nat nat)
           nat
           { DUP ;
             CAR ;
             LEVEL ;
             SUB ;
             ISNAT ;
             IF_NONE
               { DROP ; PUSH string "CURRENT_LEVEL_LESS_THAN_START_LEVEL" ; FAILWITH }
               { SWAP ;
                 GET 3 ;
                 SWAP ;
                 EDIV ;
                 IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                 CAR } } ;
         DIG 5 ;
         UNPAIR ;
         IF_LEFT
           { DIG 6 ;
             DROP ;
             DUP 2 ;
             CAR ;
             DIG 3 ;
             SWAP ;
             EXEC ;
             DUP 3 ;
             GET 3 ;
             IF_NONE
               { NONE (pair nat (or unit unit) (option (set key_hash))) ;
                 TOTAL_VOTING_POWER ;
                 NONE (set key_hash) ;
                 NONE nat ;
                 EMPTY_BIG_MAP bytes (pair (set key_hash) key_hash nat) ;
                 EMPTY_BIG_MAP (pair key_hash bytes) unit ;
                 EMPTY_BIG_MAP key_hash nat ;
                 PAIR 6 ;
                 LEFT (pair (big_map key_hash string) nat nat nat nat (set key_hash)) ;
                 DIG 2 ;
                 PAIR }
               { DUP ;
                 CAR ;
                 DUP 3 ;
                 COMPARE ;
                 EQ ;
                 IF { SWAP ; DROP ; NONE (pair nat (or unit unit) (option (set key_hash))) ; SWAP }
                    { DUP 4 ;
                      CAR ;
                      DUP 2 ;
                      CDR ;
                      IF_LEFT
                        { DUP 2 ;
                          GET 11 ;
                          DUP 2 ;
                          GET 10 ;
                          MUL ;
                          DIG 2 ;
                          GET 9 ;
                          DUP 3 ;
                          GET 7 ;
                          IF_NONE { PUSH nat 0 } {} ;
                          MUL ;
                          COMPARE ;
                          GE ;
                          IF { DUP ; GET 9 } { NONE (set key_hash) } ;
                          IF_NONE
                            { GET 7 ;
                              IF_NONE { PUSH bool False } { DROP ; PUSH bool True } ;
                              IF { NONE (set key_hash) ;
                                   UNIT ;
                                   LEFT unit ;
                                   DIG 2 ;
                                   CAR ;
                                   DUG 2 ;
                                   PUSH nat 1 ;
                                   DIG 3 ;
                                   ADD ;
                                   PAIR 3 ;
                                   SOME }
                                 { DROP ; NONE (pair nat (or unit unit) (option (set key_hash))) } ;
                              TOTAL_VOTING_POWER ;
                              NONE (set key_hash) ;
                              NONE nat ;
                              EMPTY_BIG_MAP bytes (pair (set key_hash) key_hash nat) ;
                              EMPTY_BIG_MAP (pair key_hash bytes) unit ;
                              EMPTY_BIG_MAP key_hash nat ;
                              PAIR 6 ;
                              LEFT (pair (big_map key_hash string) nat nat nat nat (set key_hash)) }
                            { SWAP ;
                              DROP ;
                              PUSH nat 1 ;
                              DIG 2 ;
                              CAR ;
                              ADD ;
                              DUP ;
                              DUP 4 ;
                              COMPARE ;
                              EQ ;
                              IF { DROP ;
                                   NONE (pair nat (or unit unit) (option (set key_hash))) ;
                                   SWAP ;
                                   TOTAL_VOTING_POWER ;
                                   PUSH nat 0 ;
                                   PUSH nat 0 ;
                                   PUSH nat 0 ;
                                   EMPTY_BIG_MAP key_hash string ;
                                   PAIR 6 ;
                                   RIGHT
                                     (pair (big_map key_hash nat)
                                           (big_map (pair key_hash bytes) unit)
                                           (big_map bytes (pair (set key_hash) key_hash nat))
                                           (option nat)
                                           (option (set key_hash))
                                           nat) }
                                 { SWAP ;
                                   DROP ;
                                   NONE (set key_hash) ;
                                   UNIT ;
                                   RIGHT unit ;
                                   PUSH nat 1 ;
                                   DIG 3 ;
                                   ADD ;
                                   PAIR 3 ;
                                   SOME ;
                                   TOTAL_VOTING_POWER ;
                                   NONE (set key_hash) ;
                                   NONE nat ;
                                   EMPTY_BIG_MAP bytes (pair (set key_hash) key_hash nat) ;
                                   EMPTY_BIG_MAP (pair key_hash bytes) unit ;
                                   EMPTY_BIG_MAP key_hash nat ;
                                   PAIR 6 ;
                                   LEFT (pair (big_map key_hash string) nat nat nat nat (set key_hash)) } } }
                        { UNPAIR 6 ;
                          DROP ;
                          DIG 3 ;
                          DUP 6 ;
                          GET 13 ;
                          MUL ;
                          DUP 6 ;
                          GET 9 ;
                          DIG 4 ;
                          DUP 5 ;
                          DUP 5 ;
                          ADD ;
                          ADD ;
                          MUL ;
                          COMPARE ;
                          GE ;
                          DIG 2 ;
                          DUP 3 ;
                          ADD ;
                          DUP ;
                          DUP 6 ;
                          GET 14 ;
                          MUL ;
                          DIG 5 ;
                          GET 9 ;
                          DIG 4 ;
                          MUL ;
                          COMPARE ;
                          GE ;
                          PUSH nat 0 ;
                          DIG 2 ;
                          COMPARE ;
                          GT ;
                          AND ;
                          AND ;
                          IF { SOME } { DROP ; NONE (set key_hash) } ;
                          UNIT ;
                          RIGHT unit ;
                          DIG 2 ;
                          CAR ;
                          DUG 2 ;
                          PUSH nat 1 ;
                          DIG 3 ;
                          ADD ;
                          PAIR 3 ;
                          SOME ;
                          TOTAL_VOTING_POWER ;
                          NONE (set key_hash) ;
                          NONE nat ;
                          EMPTY_BIG_MAP bytes (pair (set key_hash) key_hash nat) ;
                          EMPTY_BIG_MAP (pair key_hash bytes) unit ;
                          EMPTY_BIG_MAP key_hash nat ;
                          PAIR 6 ;
                          LEFT (pair (big_map key_hash string) nat nat nat nat (set key_hash)) } ;
                      DIG 2 ;
                      PAIR } } ;
             SWAP ;
             DROP ;
             SENDER ;
             DIG 6 ;
             SWAP ;
             EXEC ;
             DUP ;
             VOTING_POWER ;
             UNIT ;
             DIG 7 ;
             SWAP ;
             EXEC ;
             DROP ;
             DUP ;
             DIG 6 ;
             SWAP ;
             EXEC ;
             DROP ;
             DUP 3 ;
             CDR ;
             IF_LEFT { DROP ; PUSH string "NOT_PROMOTION_PERIOD" ; FAILWITH } {} ;
             DUP ;
             CAR ;
             DUP 4 ;
             MEM ;
             NOT ;
             IF {} { PUSH string "PROMOTION_ALREADY_VOTED" ; FAILWITH } ;
             PUSH string "yea" ;
             DUP 6 ;
             COMPARE ;
             EQ ;
             IF { DUP ; DIG 2 ; DUP 3 ; GET 3 ; ADD ; UPDATE 3 }
                { PUSH string "nay" ;
                  DUP 6 ;
                  COMPARE ;
                  EQ ;
                  IF { DUP ; DIG 2 ; DUP 3 ; GET 5 ; ADD ; UPDATE 5 }
                     { PUSH string "pass" ;
                       DUP 6 ;
                       COMPARE ;
                       EQ ;
                       IF { DUP ; DIG 2 ; DUP 3 ; GET 7 ; ADD ; UPDATE 7 }
                          { SWAP ; DROP ; PUSH string "INCORRECT_VOTE_VALUE" ; FAILWITH } } } ;
             SWAP ;
             CAR ;
             DIG 4 ;
             SOME ;
             DIG 3 ;
             UPDATE ;
             UPDATE 1 ;
             RIGHT
               (pair (big_map key_hash nat)
                     (big_map (pair key_hash bytes) unit)
                     (big_map bytes (pair (set key_hash) key_hash nat))
                     (option nat)
                     (option (set key_hash))
                     nat) ;
             UPDATE 2 ;
             SOME ;
             UPDATE 3 ;
             NIL operation }
           { IF_LEFT
               { DUP 2 ;
                 CAR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DUP 3 ;
                 GET 3 ;
                 IF_NONE
                   { NONE (pair nat (or unit unit) (option (set key_hash))) ;
                     TOTAL_VOTING_POWER ;
                     NONE (set key_hash) ;
                     NONE nat ;
                     EMPTY_BIG_MAP bytes (pair (set key_hash) key_hash nat) ;
                     EMPTY_BIG_MAP (pair key_hash bytes) unit ;
                     EMPTY_BIG_MAP key_hash nat ;
                     PAIR 6 ;
                     LEFT (pair (big_map key_hash string) nat nat nat nat (set key_hash)) ;
                     DIG 2 ;
                     PAIR }
                   { DUP ;
                     CAR ;
                     DUP 3 ;
                     COMPARE ;
                     EQ ;
                     IF { SWAP ; DROP ; NONE (pair nat (or unit unit) (option (set key_hash))) ; SWAP }
                        { DUP 4 ;
                          CAR ;
                          DUP 2 ;
                          CDR ;
                          IF_LEFT
                            { DUP 2 ;
                              GET 11 ;
                              DUP 2 ;
                              GET 10 ;
                              MUL ;
                              DIG 2 ;
                              GET 9 ;
                              DUP 3 ;
                              GET 7 ;
                              IF_NONE { PUSH nat 0 } {} ;
                              MUL ;
                              COMPARE ;
                              GE ;
                              IF { DUP ; GET 9 } { NONE (set key_hash) } ;
                              IF_NONE
                                { GET 7 ;
                                  IF_NONE { PUSH bool False } { DROP ; PUSH bool True } ;
                                  IF { NONE (set key_hash) ;
                                       UNIT ;
                                       LEFT unit ;
                                       DIG 2 ;
                                       CAR ;
                                       DUG 2 ;
                                       PUSH nat 1 ;
                                       DIG 3 ;
                                       ADD ;
                                       PAIR 3 ;
                                       SOME }
                                     { DROP ; NONE (pair nat (or unit unit) (option (set key_hash))) } ;
                                  TOTAL_VOTING_POWER ;
                                  NONE (set key_hash) ;
                                  NONE nat ;
                                  EMPTY_BIG_MAP bytes (pair (set key_hash) key_hash nat) ;
                                  EMPTY_BIG_MAP (pair key_hash bytes) unit ;
                                  EMPTY_BIG_MAP key_hash nat ;
                                  PAIR 6 ;
                                  LEFT (pair (big_map key_hash string) nat nat nat nat (set key_hash)) }
                                { SWAP ;
                                  DROP ;
                                  PUSH nat 1 ;
                                  DIG 2 ;
                                  CAR ;
                                  ADD ;
                                  DUP ;
                                  DUP 4 ;
                                  COMPARE ;
                                  EQ ;
                                  IF { DROP ;
                                       NONE (pair nat (or unit unit) (option (set key_hash))) ;
                                       SWAP ;
                                       TOTAL_VOTING_POWER ;
                                       PUSH nat 0 ;
                                       PUSH nat 0 ;
                                       PUSH nat 0 ;
                                       EMPTY_BIG_MAP key_hash string ;
                                       PAIR 6 ;
                                       RIGHT
                                         (pair (big_map key_hash nat)
                                               (big_map (pair key_hash bytes) unit)
                                               (big_map bytes (pair (set key_hash) key_hash nat))
                                               (option nat)
                                               (option (set key_hash))
                                               nat) }
                                     { SWAP ;
                                       DROP ;
                                       NONE (set key_hash) ;
                                       UNIT ;
                                       RIGHT unit ;
                                       PUSH nat 1 ;
                                       DIG 3 ;
                                       ADD ;
                                       PAIR 3 ;
                                       SOME ;
                                       TOTAL_VOTING_POWER ;
                                       NONE (set key_hash) ;
                                       NONE nat ;
                                       EMPTY_BIG_MAP bytes (pair (set key_hash) key_hash nat) ;
                                       EMPTY_BIG_MAP (pair key_hash bytes) unit ;
                                       EMPTY_BIG_MAP key_hash nat ;
                                       PAIR 6 ;
                                       LEFT (pair (big_map key_hash string) nat nat nat nat (set key_hash)) } } }
                            { UNPAIR 6 ;
                              DROP ;
                              DIG 3 ;
                              DUP 6 ;
                              GET 13 ;
                              MUL ;
                              DUP 6 ;
                              GET 9 ;
                              DIG 4 ;
                              DUP 5 ;
                              DUP 5 ;
                              ADD ;
                              ADD ;
                              MUL ;
                              COMPARE ;
                              GE ;
                              DIG 2 ;
                              DUP 3 ;
                              ADD ;
                              DUP ;
                              DUP 6 ;
                              GET 14 ;
                              MUL ;
                              DIG 5 ;
                              GET 9 ;
                              DIG 4 ;
                              MUL ;
                              COMPARE ;
                              GE ;
                              PUSH nat 0 ;
                              DIG 2 ;
                              COMPARE ;
                              GT ;
                              AND ;
                              AND ;
                              IF { SOME } { DROP ; NONE (set key_hash) } ;
                              UNIT ;
                              RIGHT unit ;
                              DIG 2 ;
                              CAR ;
                              DUG 2 ;
                              PUSH nat 1 ;
                              DIG 3 ;
                              ADD ;
                              PAIR 3 ;
                              SOME ;
                              TOTAL_VOTING_POWER ;
                              NONE (set key_hash) ;
                              NONE nat ;
                              EMPTY_BIG_MAP bytes (pair (set key_hash) key_hash nat) ;
                              EMPTY_BIG_MAP (pair key_hash bytes) unit ;
                              EMPTY_BIG_MAP key_hash nat ;
                              PAIR 6 ;
                              LEFT (pair (big_map key_hash string) nat nat nat nat (set key_hash)) } ;
                          DIG 2 ;
                          PAIR } } ;
                 DUP 2 ;
                 DIG 2 ;
                 IF_NONE
                   { DUP 4 ; GET 5 }
                   { GET 4 ; IF_NONE { DUP 4 ; GET 5 } { SOME } } ;
                 DIG 2 ;
                 SENDER ;
                 DIG 8 ;
                 SWAP ;
                 EXEC ;
                 DUP ;
                 VOTING_POWER ;
                 UNIT ;
                 DIG 9 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 DUP ;
                 DIG 8 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 DUP 3 ;
                 CDR ;
                 IF_LEFT { DIG 8 ; DROP } { DROP ; DIG 7 ; FAILWITH } ;
                 DUP ;
                 CAR ;
                 DUP 9 ;
                 CAR ;
                 GET 5 ;
                 DUP 2 ;
                 DUP 6 ;
                 GET ;
                 IF_NONE { PUSH nat 0 } {} ;
                 COMPARE ;
                 LT ;
                 IF {} { PUSH string "UPVOTING_LIMIT_EXCEEDED" ; FAILWITH } ;
                 DUP 8 ;
                 PACK ;
                 DUP 3 ;
                 GET 5 ;
                 DUP 2 ;
                 GET ;
                 IF_NONE { PUSH string "PROPOSAL_NOT_FOUND" ; FAILWITH } {} ;
                 DUP 4 ;
                 GET 3 ;
                 DUP ;
                 DUP 4 ;
                 DUP 9 ;
                 PAIR ;
                 MEM ;
                 NOT ;
                 IF {} { PUSH string "PROPOSAL_ALREADY_UPVOTED" ; FAILWITH } ;
                 DIG 5 ;
                 DUP 3 ;
                 GET 4 ;
                 ADD ;
                 DUP 6 ;
                 DUP 6 ;
                 DUP 9 ;
                 GET ;
                 IF_NONE
                   { DIG 5 ; PUSH nat 1 ; SOME ; DUP 9 ; UPDATE }
                   { DIG 6 ; PUSH nat 1 ; DIG 2 ; ADD ; SOME ; DUP 9 ; UPDATE } ;
                 UPDATE 1 ;
                 DIG 2 ;
                 UNIT ;
                 SOME ;
                 DUP 6 ;
                 DIG 8 ;
                 PAIR ;
                 UPDATE ;
                 UPDATE 3 ;
                 DIG 4 ;
                 GET 5 ;
                 DIG 3 ;
                 DUP 4 ;
                 UPDATE 4 ;
                 SOME ;
                 DIG 4 ;
                 UPDATE ;
                 UPDATE 5 ;
                 DUP ;
                 GET 7 ;
                 IF_NONE
                   { SWAP ; SOME ; UPDATE 7 ; DIG 4 ; SOME ; UPDATE 9 }
                   { DUP ;
                     DUP 4 ;
                     COMPARE ;
                     GT ;
                     IF { DROP ; SWAP ; SOME ; UPDATE 7 ; DIG 4 ; SOME ; UPDATE 9 }
                        { DIG 6 ;
                          DROP ;
                          DIG 2 ;
                          COMPARE ;
                          EQ ;
                          IF { NONE (set key_hash) ; UPDATE 9 } {} } } ;
                 LEFT (pair (big_map key_hash string) nat nat nat nat (set key_hash)) ;
                 DIG 3 ;
                 IF_NONE
                   { NIL operation }
                   { NIL operation ;
                     SWAP ;
                     EMIT %voting_finished
                       (pair (nat %finished_at_period_index)
                             (or %finished_at_period_type (unit %proposal) (unit %promotion))
                             (option %winner_proposal_payload (set key_hash))) ;
                     CONS } ;
                 DIG 4 ;
                 DIG 3 ;
                 DIG 3 ;
                 UPDATE 2 ;
                 SOME ;
                 UPDATE 3 ;
                 DIG 2 ;
                 UPDATE 5 }
               { PUSH nat 20 ;
                 DUP 2 ;
                 SIZE ;
                 COMPARE ;
                 LE ;
                 IF {} { PUSH string "INCORRECT_PROPOSERS_SET_SIZE" ; FAILWITH } ;
                 DUP 2 ;
                 CAR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DUP 3 ;
                 GET 3 ;
                 IF_NONE
                   { NONE (pair nat (or unit unit) (option (set key_hash))) ;
                     TOTAL_VOTING_POWER ;
                     NONE (set key_hash) ;
                     NONE nat ;
                     EMPTY_BIG_MAP bytes (pair (set key_hash) key_hash nat) ;
                     EMPTY_BIG_MAP (pair key_hash bytes) unit ;
                     EMPTY_BIG_MAP key_hash nat ;
                     PAIR 6 ;
                     LEFT (pair (big_map key_hash string) nat nat nat nat (set key_hash)) ;
                     DIG 2 ;
                     PAIR }
                   { DUP ;
                     CAR ;
                     DUP 3 ;
                     COMPARE ;
                     EQ ;
                     IF { SWAP ; DROP ; NONE (pair nat (or unit unit) (option (set key_hash))) ; SWAP }
                        { DUP 4 ;
                          CAR ;
                          DUP 2 ;
                          CDR ;
                          IF_LEFT
                            { DUP 2 ;
                              GET 11 ;
                              DUP 2 ;
                              GET 10 ;
                              MUL ;
                              DIG 2 ;
                              GET 9 ;
                              DUP 3 ;
                              GET 7 ;
                              IF_NONE { PUSH nat 0 } {} ;
                              MUL ;
                              COMPARE ;
                              GE ;
                              IF { DUP ; GET 9 } { NONE (set key_hash) } ;
                              IF_NONE
                                { GET 7 ;
                                  IF_NONE { PUSH bool False } { DROP ; PUSH bool True } ;
                                  IF { NONE (set key_hash) ;
                                       UNIT ;
                                       LEFT unit ;
                                       DIG 2 ;
                                       CAR ;
                                       DUG 2 ;
                                       PUSH nat 1 ;
                                       DIG 3 ;
                                       ADD ;
                                       PAIR 3 ;
                                       SOME }
                                     { DROP ; NONE (pair nat (or unit unit) (option (set key_hash))) } ;
                                  TOTAL_VOTING_POWER ;
                                  NONE (set key_hash) ;
                                  NONE nat ;
                                  EMPTY_BIG_MAP bytes (pair (set key_hash) key_hash nat) ;
                                  EMPTY_BIG_MAP (pair key_hash bytes) unit ;
                                  EMPTY_BIG_MAP key_hash nat ;
                                  PAIR 6 ;
                                  LEFT (pair (big_map key_hash string) nat nat nat nat (set key_hash)) }
                                { SWAP ;
                                  DROP ;
                                  PUSH nat 1 ;
                                  DIG 2 ;
                                  CAR ;
                                  ADD ;
                                  DUP ;
                                  DUP 4 ;
                                  COMPARE ;
                                  EQ ;
                                  IF { DROP ;
                                       NONE (pair nat (or unit unit) (option (set key_hash))) ;
                                       SWAP ;
                                       TOTAL_VOTING_POWER ;
                                       PUSH nat 0 ;
                                       PUSH nat 0 ;
                                       PUSH nat 0 ;
                                       EMPTY_BIG_MAP key_hash string ;
                                       PAIR 6 ;
                                       RIGHT
                                         (pair (big_map key_hash nat)
                                               (big_map (pair key_hash bytes) unit)
                                               (big_map bytes (pair (set key_hash) key_hash nat))
                                               (option nat)
                                               (option (set key_hash))
                                               nat) }
                                     { SWAP ;
                                       DROP ;
                                       NONE (set key_hash) ;
                                       UNIT ;
                                       RIGHT unit ;
                                       PUSH nat 1 ;
                                       DIG 3 ;
                                       ADD ;
                                       PAIR 3 ;
                                       SOME ;
                                       TOTAL_VOTING_POWER ;
                                       NONE (set key_hash) ;
                                       NONE nat ;
                                       EMPTY_BIG_MAP bytes (pair (set key_hash) key_hash nat) ;
                                       EMPTY_BIG_MAP (pair key_hash bytes) unit ;
                                       EMPTY_BIG_MAP key_hash nat ;
                                       PAIR 6 ;
                                       LEFT (pair (big_map key_hash string) nat nat nat nat (set key_hash)) } } }
                            { UNPAIR 6 ;
                              DROP ;
                              DIG 3 ;
                              DUP 6 ;
                              GET 13 ;
                              MUL ;
                              DUP 6 ;
                              GET 9 ;
                              DIG 4 ;
                              DUP 5 ;
                              DUP 5 ;
                              ADD ;
                              ADD ;
                              MUL ;
                              COMPARE ;
                              GE ;
                              DIG 2 ;
                              DUP 3 ;
                              ADD ;
                              DUP ;
                              DUP 6 ;
                              GET 14 ;
                              MUL ;
                              DIG 5 ;
                              GET 9 ;
                              DIG 4 ;
                              MUL ;
                              COMPARE ;
                              GE ;
                              PUSH nat 0 ;
                              DIG 2 ;
                              COMPARE ;
                              GT ;
                              AND ;
                              AND ;
                              IF { SOME } { DROP ; NONE (set key_hash) } ;
                              UNIT ;
                              RIGHT unit ;
                              DIG 2 ;
                              CAR ;
                              DUG 2 ;
                              PUSH nat 1 ;
                              DIG 3 ;
                              ADD ;
                              PAIR 3 ;
                              SOME ;
                              TOTAL_VOTING_POWER ;
                              NONE (set key_hash) ;
                              NONE nat ;
                              EMPTY_BIG_MAP bytes (pair (set key_hash) key_hash nat) ;
                              EMPTY_BIG_MAP (pair key_hash bytes) unit ;
                              EMPTY_BIG_MAP key_hash nat ;
                              PAIR 6 ;
                              LEFT (pair (big_map key_hash string) nat nat nat nat (set key_hash)) } ;
                          DIG 2 ;
                          PAIR } } ;
                 DUP 2 ;
                 DIG 2 ;
                 IF_NONE
                   { DUP 4 ; GET 5 }
                   { GET 4 ; IF_NONE { DUP 4 ; GET 5 } { SOME } } ;
                 DIG 2 ;
                 SENDER ;
                 DIG 8 ;
                 SWAP ;
                 EXEC ;
                 DUP ;
                 VOTING_POWER ;
                 UNIT ;
                 DIG 9 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 DUP 7 ;
                 CAR ;
                 GET 7 ;
                 IF_NONE
                   { DUP ; DIG 8 ; SWAP ; EXEC ; DROP }
                   { DIG 8 ;
                     DROP ;
                     DUP 3 ;
                     VIEW "check_proposer_in_last_winner" bool ;
                     IF_NONE
                       { PUSH string "FAILED_TO_CHECK_PROPOSER_IN_COMMITTEE" ; FAILWITH }
                       {} ;
                     IF {} { PUSH string "PROPOSER_NOT_IN_COMMITTEE" ; FAILWITH } } ;
                 DUP 3 ;
                 CDR ;
                 IF_LEFT { DIG 8 ; DROP } { DROP ; DIG 7 ; FAILWITH } ;
                 DUP ;
                 CAR ;
                 DUP 9 ;
                 CAR ;
                 GET 5 ;
                 DUP 2 ;
                 DUP 6 ;
                 GET ;
                 IF_NONE { PUSH nat 0 } {} ;
                 COMPARE ;
                 LT ;
                 IF {} { PUSH string "UPVOTING_LIMIT_EXCEEDED" ; FAILWITH } ;
                 DUP 8 ;
                 PACK ;
                 DUP 3 ;
                 GET 5 ;
                 DUP 2 ;
                 MEM ;
                 NOT ;
                 IF {} { PUSH string "PROPOSAL_ALREADY_CREATED" ; FAILWITH } ;
                 DUP 3 ;
                 DUP 3 ;
                 DUP 7 ;
                 GET ;
                 IF_NONE
                   { DIG 2 ; PUSH nat 1 ; SOME ; DUP 7 ; UPDATE }
                   { DIG 3 ; PUSH nat 1 ; DIG 2 ; ADD ; SOME ; DUP 7 ; UPDATE } ;
                 UPDATE 1 ;
                 DUP 3 ;
                 GET 3 ;
                 UNIT ;
                 SOME ;
                 DUP 4 ;
                 DUP 8 ;
                 PAIR ;
                 UPDATE ;
                 UPDATE 3 ;
                 DIG 2 ;
                 GET 5 ;
                 DUP 4 ;
                 DIG 5 ;
                 DUP 10 ;
                 PAIR 3 ;
                 SOME ;
                 DIG 3 ;
                 UPDATE ;
                 UPDATE 5 ;
                 DUP ;
                 GET 7 ;
                 IF_NONE
                   { SWAP ; SOME ; UPDATE 7 ; DIG 4 ; SOME ; UPDATE 9 }
                   { DUP ;
                     DUP 4 ;
                     COMPARE ;
                     GT ;
                     IF { DROP ; SWAP ; SOME ; UPDATE 7 ; DIG 4 ; SOME ; UPDATE 9 }
                        { DIG 6 ;
                          DROP ;
                          DIG 2 ;
                          COMPARE ;
                          EQ ;
                          IF { NONE (set key_hash) ; UPDATE 9 } {} } } ;
                 LEFT (pair (big_map key_hash string) nat nat nat nat (set key_hash)) ;
                 DIG 3 ;
                 IF_NONE
                   { NIL operation }
                   { NIL operation ;
                     SWAP ;
                     EMIT %voting_finished
                       (pair (nat %finished_at_period_index)
                             (or %finished_at_period_type (unit %proposal) (unit %promotion))
                             (option %winner_proposal_payload (set key_hash))) ;
                     CONS } ;
                 DIG 4 ;
                 DIG 3 ;
                 DIG 3 ;
                 UPDATE 2 ;
                 SOME ;
                 UPDATE 3 ;
                 DIG 2 ;
                 UPDATE 5 } ;
             SWAP } ;
         PAIR } ;
  view "get_voting_state"
       unit
       (pair (nat %period_index)
             (or %period_type (unit %proposal) (unit %promotion))
             (nat %remaining_blocks)
             (option %finished_voting
                (pair (nat %finished_at_period_index)
                      (or %finished_at_period_type (unit %proposal) (unit %promotion))
                      (option %winner_proposal_payload (set key_hash)))))
       { PUSH string "CURRENT_LEVEL_LESS_THAN_START_LEVEL" ;
         SWAP ;
         CDR ;
         DUP ;
         CAR ;
         DUP ;
         CAR ;
         LEVEL ;
         SUB ;
         ISNAT ;
         IF_NONE
           { DROP ; DUP 2 ; FAILWITH }
           { SWAP ;
             GET 3 ;
             SWAP ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR } ;
         DUP 2 ;
         GET 3 ;
         IF_NONE
           { NONE (pair nat (or unit unit) (option (set key_hash))) ;
             TOTAL_VOTING_POWER ;
             NONE (set key_hash) ;
             NONE nat ;
             EMPTY_BIG_MAP bytes (pair (set key_hash) key_hash nat) ;
             EMPTY_BIG_MAP (pair key_hash bytes) unit ;
             EMPTY_BIG_MAP key_hash nat ;
             PAIR 6 ;
             LEFT (pair (big_map key_hash string) nat nat nat nat (set key_hash)) ;
             DIG 2 ;
             PAIR }
           { DUP ;
             CAR ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             IF { SWAP ; DROP ; NONE (pair nat (or unit unit) (option (set key_hash))) ; SWAP }
                { DUP 3 ;
                  CAR ;
                  DUP 2 ;
                  CDR ;
                  IF_LEFT
                    { DUP 2 ;
                      GET 11 ;
                      DUP 2 ;
                      GET 10 ;
                      MUL ;
                      DIG 2 ;
                      GET 9 ;
                      DUP 3 ;
                      GET 7 ;
                      IF_NONE { PUSH nat 0 } {} ;
                      MUL ;
                      COMPARE ;
                      GE ;
                      IF { DUP ; GET 9 } { NONE (set key_hash) } ;
                      IF_NONE
                        { GET 7 ;
                          IF_NONE { PUSH bool False } { DROP ; PUSH bool True } ;
                          IF { NONE (set key_hash) ;
                               UNIT ;
                               LEFT unit ;
                               DIG 2 ;
                               CAR ;
                               DUG 2 ;
                               PUSH nat 1 ;
                               DIG 3 ;
                               ADD ;
                               PAIR 3 ;
                               SOME }
                             { DROP ; NONE (pair nat (or unit unit) (option (set key_hash))) } ;
                          TOTAL_VOTING_POWER ;
                          NONE (set key_hash) ;
                          NONE nat ;
                          EMPTY_BIG_MAP bytes (pair (set key_hash) key_hash nat) ;
                          EMPTY_BIG_MAP (pair key_hash bytes) unit ;
                          EMPTY_BIG_MAP key_hash nat ;
                          PAIR 6 ;
                          LEFT (pair (big_map key_hash string) nat nat nat nat (set key_hash)) }
                        { SWAP ;
                          DROP ;
                          PUSH nat 1 ;
                          DIG 2 ;
                          CAR ;
                          ADD ;
                          DUP ;
                          DUP 4 ;
                          COMPARE ;
                          EQ ;
                          IF { DROP ;
                               NONE (pair nat (or unit unit) (option (set key_hash))) ;
                               SWAP ;
                               TOTAL_VOTING_POWER ;
                               PUSH nat 0 ;
                               PUSH nat 0 ;
                               PUSH nat 0 ;
                               EMPTY_BIG_MAP key_hash string ;
                               PAIR 6 ;
                               RIGHT
                                 (pair (big_map key_hash nat)
                                       (big_map (pair key_hash bytes) unit)
                                       (big_map bytes (pair (set key_hash) key_hash nat))
                                       (option nat)
                                       (option (set key_hash))
                                       nat) }
                             { SWAP ;
                               DROP ;
                               NONE (set key_hash) ;
                               UNIT ;
                               RIGHT unit ;
                               PUSH nat 1 ;
                               DIG 3 ;
                               ADD ;
                               PAIR 3 ;
                               SOME ;
                               TOTAL_VOTING_POWER ;
                               NONE (set key_hash) ;
                               NONE nat ;
                               EMPTY_BIG_MAP bytes (pair (set key_hash) key_hash nat) ;
                               EMPTY_BIG_MAP (pair key_hash bytes) unit ;
                               EMPTY_BIG_MAP key_hash nat ;
                               PAIR 6 ;
                               LEFT (pair (big_map key_hash string) nat nat nat nat (set key_hash)) } } }
                    { UNPAIR 6 ;
                      DROP ;
                      DIG 3 ;
                      DUP 6 ;
                      GET 13 ;
                      MUL ;
                      DUP 6 ;
                      GET 9 ;
                      DIG 4 ;
                      DUP 5 ;
                      DUP 5 ;
                      ADD ;
                      ADD ;
                      MUL ;
                      COMPARE ;
                      GE ;
                      DIG 2 ;
                      DUP 3 ;
                      ADD ;
                      DUP ;
                      DUP 6 ;
                      GET 14 ;
                      MUL ;
                      DIG 5 ;
                      GET 9 ;
                      DIG 4 ;
                      MUL ;
                      COMPARE ;
                      GE ;
                      PUSH nat 0 ;
                      DIG 2 ;
                      COMPARE ;
                      GT ;
                      AND ;
                      AND ;
                      IF { SOME } { DROP ; NONE (set key_hash) } ;
                      UNIT ;
                      RIGHT unit ;
                      DIG 2 ;
                      CAR ;
                      DUG 2 ;
                      PUSH nat 1 ;
                      DIG 3 ;
                      ADD ;
                      PAIR 3 ;
                      SOME ;
                      TOTAL_VOTING_POWER ;
                      NONE (set key_hash) ;
                      NONE nat ;
                      EMPTY_BIG_MAP bytes (pair (set key_hash) key_hash nat) ;
                      EMPTY_BIG_MAP (pair key_hash bytes) unit ;
                      EMPTY_BIG_MAP key_hash nat ;
                      PAIR 6 ;
                      LEFT (pair (big_map key_hash string) nat nat nat nat (set key_hash)) } ;
                  DIG 2 ;
                  PAIR } } ;
         DUP 2 ;
         DIG 2 ;
         IF_NONE
           { DUP 3 ; GET 5 }
           { GET 4 ; IF_NONE { DUP 3 ; GET 5 } { SOME } } ;
         DIG 2 ;
         PAIR 3 ;
         DUP ;
         CAR ;
         SWAP ;
         GET 4 ;
         DIG 2 ;
         CAR ;
         DUP ;
         CAR ;
         LEVEL ;
         SUB ;
         SWAP ;
         GET 3 ;
         SWAP ;
         ISNAT ;
         IF_NONE
           { DROP ; DIG 2 ; FAILWITH }
           { DIG 4 ;
             DROP ;
             DUP 2 ;
             SWAP ;
             EDIV ;
             IF_NONE { PUSH string "MOD by 0" ; FAILWITH } {} ;
             CDR ;
             SWAP ;
             SUB ;
             ISNAT ;
             IF_NONE { PUSH string "option is None" ; FAILWITH } {} } ;
         DUP 3 ;
         CDR ;
         IF_LEFT { DROP ; UNIT ; LEFT unit } { DROP ; UNIT ; RIGHT unit } ;
         DIG 3 ;
         CAR ;
         PAIR 4 } ;
  view "check_proposer_in_last_winner"
       key_hash
       bool
       { UNPAIR ;
         DUP 2 ;
         CAR ;
         DUP ;
         CAR ;
         LEVEL ;
         SUB ;
         ISNAT ;
         IF_NONE
           { DROP ; PUSH string "CURRENT_LEVEL_LESS_THAN_START_LEVEL" ; FAILWITH }
           { SWAP ;
             GET 3 ;
             SWAP ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR } ;
         DUP 3 ;
         GET 3 ;
         IF_NONE
           { NONE (pair nat (or unit unit) (option (set key_hash))) ;
             TOTAL_VOTING_POWER ;
             NONE (set key_hash) ;
             NONE nat ;
             EMPTY_BIG_MAP bytes (pair (set key_hash) key_hash nat) ;
             EMPTY_BIG_MAP (pair key_hash bytes) unit ;
             EMPTY_BIG_MAP key_hash nat ;
             PAIR 6 ;
             LEFT (pair (big_map key_hash string) nat nat nat nat (set key_hash)) ;
             DIG 2 ;
             PAIR }
           { DUP ;
             CAR ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             IF { SWAP ; DROP ; NONE (pair nat (or unit unit) (option (set key_hash))) ; SWAP }
                { DUP 4 ;
                  CAR ;
                  DUP 2 ;
                  CDR ;
                  IF_LEFT
                    { DUP 2 ;
                      GET 11 ;
                      DUP 2 ;
                      GET 10 ;
                      MUL ;
                      DIG 2 ;
                      GET 9 ;
                      DUP 3 ;
                      GET 7 ;
                      IF_NONE { PUSH nat 0 } {} ;
                      MUL ;
                      COMPARE ;
                      GE ;
                      IF { DUP ; GET 9 } { NONE (set key_hash) } ;
                      IF_NONE
                        { GET 7 ;
                          IF_NONE { PUSH bool False } { DROP ; PUSH bool True } ;
                          IF { NONE (set key_hash) ;
                               UNIT ;
                               LEFT unit ;
                               DIG 2 ;
                               CAR ;
                               DUG 2 ;
                               PUSH nat 1 ;
                               DIG 3 ;
                               ADD ;
                               PAIR 3 ;
                               SOME }
                             { DROP ; NONE (pair nat (or unit unit) (option (set key_hash))) } ;
                          TOTAL_VOTING_POWER ;
                          NONE (set key_hash) ;
                          NONE nat ;
                          EMPTY_BIG_MAP bytes (pair (set key_hash) key_hash nat) ;
                          EMPTY_BIG_MAP (pair key_hash bytes) unit ;
                          EMPTY_BIG_MAP key_hash nat ;
                          PAIR 6 ;
                          LEFT (pair (big_map key_hash string) nat nat nat nat (set key_hash)) }
                        { SWAP ;
                          DROP ;
                          PUSH nat 1 ;
                          DIG 2 ;
                          CAR ;
                          ADD ;
                          DUP ;
                          DUP 4 ;
                          COMPARE ;
                          EQ ;
                          IF { DROP ;
                               NONE (pair nat (or unit unit) (option (set key_hash))) ;
                               SWAP ;
                               TOTAL_VOTING_POWER ;
                               PUSH nat 0 ;
                               PUSH nat 0 ;
                               PUSH nat 0 ;
                               EMPTY_BIG_MAP key_hash string ;
                               PAIR 6 ;
                               RIGHT
                                 (pair (big_map key_hash nat)
                                       (big_map (pair key_hash bytes) unit)
                                       (big_map bytes (pair (set key_hash) key_hash nat))
                                       (option nat)
                                       (option (set key_hash))
                                       nat) }
                             { SWAP ;
                               DROP ;
                               NONE (set key_hash) ;
                               UNIT ;
                               RIGHT unit ;
                               PUSH nat 1 ;
                               DIG 3 ;
                               ADD ;
                               PAIR 3 ;
                               SOME ;
                               TOTAL_VOTING_POWER ;
                               NONE (set key_hash) ;
                               NONE nat ;
                               EMPTY_BIG_MAP bytes (pair (set key_hash) key_hash nat) ;
                               EMPTY_BIG_MAP (pair key_hash bytes) unit ;
                               EMPTY_BIG_MAP key_hash nat ;
                               PAIR 6 ;
                               LEFT (pair (big_map key_hash string) nat nat nat nat (set key_hash)) } } }
                    { UNPAIR 6 ;
                      DROP ;
                      DIG 3 ;
                      DUP 6 ;
                      GET 13 ;
                      MUL ;
                      DUP 6 ;
                      GET 9 ;
                      DIG 4 ;
                      DUP 5 ;
                      DUP 5 ;
                      ADD ;
                      ADD ;
                      MUL ;
                      COMPARE ;
                      GE ;
                      DIG 2 ;
                      DUP 3 ;
                      ADD ;
                      DUP ;
                      DUP 6 ;
                      GET 14 ;
                      MUL ;
                      DIG 5 ;
                      GET 9 ;
                      DIG 4 ;
                      MUL ;
                      COMPARE ;
                      GE ;
                      PUSH nat 0 ;
                      DIG 2 ;
                      COMPARE ;
                      GT ;
                      AND ;
                      AND ;
                      IF { SOME } { DROP ; NONE (set key_hash) } ;
                      UNIT ;
                      RIGHT unit ;
                      DIG 2 ;
                      CAR ;
                      DUG 2 ;
                      PUSH nat 1 ;
                      DIG 3 ;
                      ADD ;
                      PAIR 3 ;
                      SOME ;
                      TOTAL_VOTING_POWER ;
                      NONE (set key_hash) ;
                      NONE nat ;
                      EMPTY_BIG_MAP bytes (pair (set key_hash) key_hash nat) ;
                      EMPTY_BIG_MAP (pair key_hash bytes) unit ;
                      EMPTY_BIG_MAP key_hash nat ;
                      PAIR 6 ;
                      LEFT (pair (big_map key_hash string) nat nat nat nat (set key_hash)) } ;
                  DIG 2 ;
                  PAIR } } ;
         DROP ;
         IF_NONE
           { SWAP ; GET 5 }
           { GET 4 ; IF_NONE { SWAP ; GET 5 } { DIG 2 ; DROP ; SOME } } ;
         IF_NONE { PUSH string "LAST_WINNER_NOT_FOUND" ; FAILWITH } {} ;
         SWAP ;
         MEM } }

