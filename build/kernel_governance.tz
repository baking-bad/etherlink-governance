{ parameter
    (or (address %trigger_kernel_upgrade)
        (or (string %vote) (or (bytes %upvote_proposal) (bytes %new_proposal)))) ;
  storage
    (pair (pair %config
             (nat %started_at_level)
             (nat %period_length)
             (int %cooldown_period_sec)
             (nat %upvoting_limit)
             (set %allowed_proposers address)
             (nat %scale)
             (nat %proposal_quorum)
             (nat %promotion_quorum)
             (nat %promotion_supermajority))
          (option %voting_context
             (pair (nat %period_index)
                   (or %period_type (unit %proposal) (unit %promotion))
                   (pair %proposal_period
                      (big_map %upvoters address (set bytes))
                      (big_map %proposals
                         bytes
                         (pair (bytes %payload) (address %proposer) (nat %upvotes_voting_power)))
                      (option %max_upvotes_voting_power nat)
                      (option %winner_candidate bytes)
                      (nat %total_voting_power))
                   (option %promotion_period
                      (pair (bytes %payload)
                            (big_map %voters address unit)
                            (nat %yay_voting_power)
                            (nat %nay_voting_power)
                            (nat %pass_voting_power)
                            (nat %total_voting_power)))
                   (option %last_winner_payload bytes)))
          (big_map %metadata string bytes)) ;
  code { PUSH string "NOT_PROPOSAL_PERIOD" ;
         PUSH string "UPVOTING_LIMIT_EXCEEDED" ;
         LAMBDA
           unit
           unit
           { DROP ;
             PUSH string "XTZ_IN_TRANSACTION_DISALLOWED" ;
             PUSH mutez 0 ;
             AMOUNT ;
             COMPARE ;
             EQ ;
             IF { DROP ; UNIT } { FAILWITH } } ;
         LAMBDA
           nat
           unit
           { PUSH nat 0 ;
             SWAP ;
             COMPARE ;
             GT ;
             IF { UNIT } { PUSH string "NO_VOTING_POWER" ; FAILWITH } } ;
         LAMBDA
           address
           key_hash
           { PACK ;
             PUSH string "NOT_IMPLICIT_ADDRESS" ;
             NIL bytes ;
             DUP 3 ;
             PUSH nat 21 ;
             PUSH nat 7 ;
             SLICE ;
             IF_NONE { PUSH string "SLICE" ; FAILWITH } {} ;
             CONS ;
             PUSH bytes 0x15 ;
             CONS ;
             DIG 2 ;
             PUSH nat 5 ;
             PUSH nat 0 ;
             SLICE ;
             IF_NONE { PUSH string "SLICE" ; FAILWITH } {} ;
             CONS ;
             CONCAT ;
             UNPACK key_hash ;
             IF_NONE { FAILWITH } { SWAP ; DROP } } ;
         PUSH string "yay" ;
         PUSH string "nay" ;
         LAMBDA
           (pair nat nat int nat (set address) nat nat nat nat)
           nat
           { DUP ;
             CAR ;
             LEVEL ;
             SUB ;
             ISNAT ;
             IF_NONE
               { DROP ; PUSH string "CURRENT_LEVEL_LESS_THAN_START_LEVEL" ; FAILWITH }
               { SWAP ;
                 GET 3 ;
                 SWAP ;
                 EDIV ;
                 IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                 CAR } } ;
         LAMBDA
           (pair address bytes (big_map address (set bytes)))
           (big_map address (set bytes))
           { UNPAIR 3 ;
             DUP 3 ;
             DUP 2 ;
             GET ;
             IF_NONE
               { DIG 2 ;
                 EMPTY_SET bytes ;
                 DIG 3 ;
                 PUSH bool True ;
                 SWAP ;
                 UPDATE ;
                 DIG 2 ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE }
               { DIG 3 ;
                 SWAP ;
                 DIG 3 ;
                 PUSH bool True ;
                 SWAP ;
                 UPDATE ;
                 SOME ;
                 DIG 2 ;
                 UPDATE } } ;
         DIG 9 ;
         UNPAIR ;
         IF_LEFT
           { DIG 2 ;
             DIG 4 ;
             DIG 5 ;
             DIG 6 ;
             DIG 7 ;
             DIG 9 ;
             DIG 10 ;
             DROP 7 ;
             UNIT ;
             DIG 4 ;
             SWAP ;
             EXEC ;
             DROP ;
             DUP 2 ;
             CAR ;
             DIG 3 ;
             SWAP ;
             EXEC ;
             DUP 3 ;
             GET 3 ;
             IF_NONE
               { NONE (pair nat (or unit unit) (option bytes)) ;
                 NONE bytes ;
                 NONE (pair bytes (big_map address unit) nat nat nat nat) ;
                 TOTAL_VOTING_POWER ;
                 NONE bytes ;
                 NONE nat ;
                 EMPTY_BIG_MAP bytes (pair bytes address nat) ;
                 EMPTY_BIG_MAP address (set bytes) ;
                 PAIR 5 ;
                 UNIT ;
                 LEFT unit ;
                 DIG 5 ;
                 PAIR 5 }
               { DUP ;
                 CAR ;
                 DUP 3 ;
                 COMPARE ;
                 EQ ;
                 IF { SWAP ; DROP ; NONE (pair nat (or unit unit) (option bytes)) ; SWAP }
                    { DUP 4 ;
                      CAR ;
                      DUP 2 ;
                      GET 3 ;
                      IF_LEFT
                        { DROP ;
                          DUP 2 ;
                          GET 5 ;
                          DUP 2 ;
                          GET 13 ;
                          DUP 2 ;
                          GET 8 ;
                          MUL ;
                          DIG 2 ;
                          GET 11 ;
                          DUP 3 ;
                          GET 5 ;
                          IF_NONE { PUSH nat 0 } {} ;
                          MUL ;
                          COMPARE ;
                          GE ;
                          IF { GET 7 } { DROP ; NONE bytes } ;
                          IF_NONE
                            { DUP ;
                              GET 5 ;
                              GET 5 ;
                              IF_NONE { PUSH bool False } { DROP ; PUSH bool True } ;
                              IF { NONE bytes ;
                                   DUP 2 ;
                                   GET 3 ;
                                   PUSH nat 1 ;
                                   DUP 4 ;
                                   CAR ;
                                   ADD ;
                                   PAIR 3 ;
                                   SOME }
                                 { NONE (pair nat (or unit unit) (option bytes)) } ;
                              SWAP ;
                              GET 8 ;
                              NONE (pair bytes (big_map address unit) nat nat nat nat) ;
                              TOTAL_VOTING_POWER ;
                              NONE bytes ;
                              NONE nat ;
                              EMPTY_BIG_MAP bytes (pair bytes address nat) ;
                              EMPTY_BIG_MAP address (set bytes) ;
                              PAIR 5 ;
                              UNIT ;
                              LEFT unit ;
                              DIG 5 ;
                              PAIR 5 }
                            { PUSH nat 1 ;
                              DUP 3 ;
                              CAR ;
                              ADD ;
                              DUP ;
                              DUP 5 ;
                              COMPARE ;
                              EQ ;
                              IF { DROP ;
                                   NONE (pair nat (or unit unit) (option bytes)) ;
                                   DIG 2 ;
                                   DIG 3 ;
                                   UPDATE 1 ;
                                   UNIT ;
                                   RIGHT unit ;
                                   UPDATE 3 ;
                                   TOTAL_VOTING_POWER ;
                                   PUSH nat 0 ;
                                   PUSH nat 0 ;
                                   PUSH nat 0 ;
                                   EMPTY_BIG_MAP address unit ;
                                   DIG 7 ;
                                   PAIR 6 ;
                                   SOME ;
                                   UPDATE 7 }
                                 { DUP 3 ;
                                   SWAP ;
                                   UPDATE 1 ;
                                   UNIT ;
                                   RIGHT unit ;
                                   UPDATE 3 ;
                                   TOTAL_VOTING_POWER ;
                                   PUSH nat 0 ;
                                   PUSH nat 0 ;
                                   PUSH nat 0 ;
                                   EMPTY_BIG_MAP address unit ;
                                   DIG 6 ;
                                   PAIR 6 ;
                                   SOME ;
                                   UPDATE 7 ;
                                   NONE bytes ;
                                   DUP 2 ;
                                   GET 3 ;
                                   PUSH nat 1 ;
                                   DIG 3 ;
                                   CAR ;
                                   ADD ;
                                   PAIR 3 ;
                                   SOME ;
                                   SWAP ;
                                   GET 8 ;
                                   NONE (pair bytes (big_map address unit) nat nat nat nat) ;
                                   TOTAL_VOTING_POWER ;
                                   NONE bytes ;
                                   NONE nat ;
                                   EMPTY_BIG_MAP bytes (pair bytes address nat) ;
                                   EMPTY_BIG_MAP address (set bytes) ;
                                   PAIR 5 ;
                                   UNIT ;
                                   LEFT unit ;
                                   DIG 5 ;
                                   PAIR 5 } } }
                        { DROP ;
                          DUP 2 ;
                          GET 8 ;
                          NONE (pair bytes (big_map address unit) nat nat nat nat) ;
                          TOTAL_VOTING_POWER ;
                          NONE bytes ;
                          NONE nat ;
                          EMPTY_BIG_MAP bytes (pair bytes address nat) ;
                          EMPTY_BIG_MAP address (set bytes) ;
                          PAIR 5 ;
                          UNIT ;
                          LEFT unit ;
                          DIG 6 ;
                          PAIR 5 ;
                          DUP 3 ;
                          GET 7 ;
                          IF_NONE { PUSH string "option is None" ; FAILWITH } {} ;
                          UNPAIR 6 ;
                          SWAP ;
                          DROP ;
                          DUP 7 ;
                          GET 15 ;
                          DIG 5 ;
                          DUP 8 ;
                          GET 11 ;
                          DIG 6 ;
                          DUP 7 ;
                          DUP 7 ;
                          ADD ;
                          ADD ;
                          MUL ;
                          EDIV ;
                          IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                          CAR ;
                          COMPARE ;
                          GE ;
                          DIG 3 ;
                          DUP 4 ;
                          ADD ;
                          PUSH nat 0 ;
                          DUP 2 ;
                          COMPARE ;
                          GT ;
                          IF { DUP 6 ;
                               GET 16 ;
                               SWAP ;
                               DIG 6 ;
                               GET 11 ;
                               DIG 5 ;
                               MUL ;
                               EDIV ;
                               IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                               CAR ;
                               COMPARE ;
                               GE }
                             { DIG 3 ; DIG 5 ; DROP 3 ; PUSH bool False } ;
                          AND ;
                          IF { SOME } { DROP ; NONE bytes } ;
                          DUP ;
                          DUP 4 ;
                          GET 3 ;
                          PUSH nat 1 ;
                          DIG 5 ;
                          CAR ;
                          ADD ;
                          PAIR 3 ;
                          SOME ;
                          SWAP ;
                          IF_NONE { SWAP } { DIG 2 ; SWAP ; SOME ; UPDATE 8 } } } } ;
             DUP ;
             GET 8 ;
             IF_NONE { PUSH string "LAST_WINNER_PAYLOAD_NOT_FOUND" ; FAILWITH } {} ;
             DIG 3 ;
             CONTRACT (or (or (pair %d bytes (ticket (pair nat (option bytes)))) (bytes %a)) (bytes %u)) ;
             IF_NONE { PUSH string "ROLLUP_ENTRYPOINT_NOT_FOUND" ; FAILWITH } {} ;
             DUP 5 ;
             CAR ;
             GET 5 ;
             NOW ;
             ADD ;
             PACK ;
             UNPACK nat ;
             IF_NONE { PUSH string "option is None" ; FAILWITH } {} ;
             BYTES ;
             PUSH bytes 0x ;
             PUSH int 1 ;
             PUSH int 1 ;
             DUP 4 ;
             SIZE ;
             SUB ;
             PUSH int 0 ;
             DUP 2 ;
             DUP 2 ;
             COMPARE ;
             LE ;
             LOOP { DUP ;
                    DUG 3 ;
                    DIP 3
                        { ISNAT ;
                          IF_NONE { PUSH string "option is None" ; FAILWITH } {} ;
                          SWAP ;
                          DUP 3 ;
                          PUSH nat 1 ;
                          DIG 3 ;
                          SLICE ;
                          IF_NONE { PUSH string "SLICE" ; FAILWITH } {} ;
                          CONCAT } ;
                    DUP 3 ;
                    ADD ;
                    DUP 2 ;
                    DUP 2 ;
                    COMPARE ;
                    LE } ;
             DROP 3 ;
             SWAP ;
             DROP ;
             DUP ;
             SIZE ;
             INT ;
             PUSH int 1 ;
             PUSH int 1 ;
             PUSH nat 8 ;
             SUB ;
             DIG 2 ;
             DUP 2 ;
             DUP 2 ;
             COMPARE ;
             LE ;
             LOOP { DUP ;
                    DUG 3 ;
                    DIP 3 { DROP ; PUSH bytes 0x00 ; SWAP ; CONCAT } ;
                    DUP 3 ;
                    ADD ;
                    DUP 2 ;
                    DUP 2 ;
                    COMPARE ;
                    LE } ;
             DROP 3 ;
             NIL bytes ;
             SWAP ;
             CONS ;
             PUSH bytes 0x88 ;
             CONS ;
             DIG 2 ;
             CONS ;
             PUSH bytes 0xeba1 ;
             CONS ;
             CONCAT ;
             RIGHT (or (pair bytes (ticket (pair nat (option bytes)))) bytes) ;
             SWAP ;
             PUSH mutez 0 ;
             DIG 2 ;
             TRANSFER_TOKENS ;
             DIG 2 ;
             IF_NONE
               { NIL operation }
               { NIL operation ;
                 SWAP ;
                 EMIT %voting_finished
                   (pair (nat %finished_at_period_index)
                         (or %finished_at_period_type (unit %proposal) (unit %promotion))
                         (option %winner_payload bytes)) ;
                 CONS } ;
             DIG 3 ;
             DIG 3 ;
             SOME ;
             UPDATE 3 ;
             SWAP ;
             DIG 2 ;
             CONS }
           { IF_LEFT
               { DIG 2 ;
                 DIG 9 ;
                 DIG 10 ;
                 DROP 3 ;
                 DUP 2 ;
                 CAR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DUP 3 ;
                 GET 3 ;
                 IF_NONE
                   { NONE (pair nat (or unit unit) (option bytes)) ;
                     NONE bytes ;
                     NONE (pair bytes (big_map address unit) nat nat nat nat) ;
                     TOTAL_VOTING_POWER ;
                     NONE bytes ;
                     NONE nat ;
                     EMPTY_BIG_MAP bytes (pair bytes address nat) ;
                     EMPTY_BIG_MAP address (set bytes) ;
                     PAIR 5 ;
                     UNIT ;
                     LEFT unit ;
                     DIG 5 ;
                     PAIR 5 }
                   { DUP ;
                     CAR ;
                     DUP 3 ;
                     COMPARE ;
                     EQ ;
                     IF { SWAP ; DROP ; NONE (pair nat (or unit unit) (option bytes)) ; SWAP }
                        { DUP 4 ;
                          CAR ;
                          DUP 2 ;
                          GET 3 ;
                          IF_LEFT
                            { DROP ;
                              DUP 2 ;
                              GET 5 ;
                              DUP 2 ;
                              GET 13 ;
                              DUP 2 ;
                              GET 8 ;
                              MUL ;
                              DIG 2 ;
                              GET 11 ;
                              DUP 3 ;
                              GET 5 ;
                              IF_NONE { PUSH nat 0 } {} ;
                              MUL ;
                              COMPARE ;
                              GE ;
                              IF { GET 7 } { DROP ; NONE bytes } ;
                              IF_NONE
                                { DUP ;
                                  GET 5 ;
                                  GET 5 ;
                                  IF_NONE { PUSH bool False } { DROP ; PUSH bool True } ;
                                  IF { NONE bytes ;
                                       DUP 2 ;
                                       GET 3 ;
                                       PUSH nat 1 ;
                                       DUP 4 ;
                                       CAR ;
                                       ADD ;
                                       PAIR 3 ;
                                       SOME }
                                     { NONE (pair nat (or unit unit) (option bytes)) } ;
                                  SWAP ;
                                  GET 8 ;
                                  NONE (pair bytes (big_map address unit) nat nat nat nat) ;
                                  TOTAL_VOTING_POWER ;
                                  NONE bytes ;
                                  NONE nat ;
                                  EMPTY_BIG_MAP bytes (pair bytes address nat) ;
                                  EMPTY_BIG_MAP address (set bytes) ;
                                  PAIR 5 ;
                                  UNIT ;
                                  LEFT unit ;
                                  DIG 5 ;
                                  PAIR 5 }
                                { PUSH nat 1 ;
                                  DUP 3 ;
                                  CAR ;
                                  ADD ;
                                  DUP ;
                                  DUP 5 ;
                                  COMPARE ;
                                  EQ ;
                                  IF { DROP ;
                                       NONE (pair nat (or unit unit) (option bytes)) ;
                                       DIG 2 ;
                                       DIG 3 ;
                                       UPDATE 1 ;
                                       UNIT ;
                                       RIGHT unit ;
                                       UPDATE 3 ;
                                       TOTAL_VOTING_POWER ;
                                       PUSH nat 0 ;
                                       PUSH nat 0 ;
                                       PUSH nat 0 ;
                                       EMPTY_BIG_MAP address unit ;
                                       DIG 7 ;
                                       PAIR 6 ;
                                       SOME ;
                                       UPDATE 7 }
                                     { DUP 3 ;
                                       SWAP ;
                                       UPDATE 1 ;
                                       UNIT ;
                                       RIGHT unit ;
                                       UPDATE 3 ;
                                       TOTAL_VOTING_POWER ;
                                       PUSH nat 0 ;
                                       PUSH nat 0 ;
                                       PUSH nat 0 ;
                                       EMPTY_BIG_MAP address unit ;
                                       DIG 6 ;
                                       PAIR 6 ;
                                       SOME ;
                                       UPDATE 7 ;
                                       NONE bytes ;
                                       DUP 2 ;
                                       GET 3 ;
                                       PUSH nat 1 ;
                                       DIG 3 ;
                                       CAR ;
                                       ADD ;
                                       PAIR 3 ;
                                       SOME ;
                                       SWAP ;
                                       GET 8 ;
                                       NONE (pair bytes (big_map address unit) nat nat nat nat) ;
                                       TOTAL_VOTING_POWER ;
                                       NONE bytes ;
                                       NONE nat ;
                                       EMPTY_BIG_MAP bytes (pair bytes address nat) ;
                                       EMPTY_BIG_MAP address (set bytes) ;
                                       PAIR 5 ;
                                       UNIT ;
                                       LEFT unit ;
                                       DIG 5 ;
                                       PAIR 5 } } }
                            { DROP ;
                              DUP 2 ;
                              GET 8 ;
                              NONE (pair bytes (big_map address unit) nat nat nat nat) ;
                              TOTAL_VOTING_POWER ;
                              NONE bytes ;
                              NONE nat ;
                              EMPTY_BIG_MAP bytes (pair bytes address nat) ;
                              EMPTY_BIG_MAP address (set bytes) ;
                              PAIR 5 ;
                              UNIT ;
                              LEFT unit ;
                              DIG 6 ;
                              PAIR 5 ;
                              DUP 3 ;
                              GET 7 ;
                              IF_NONE { PUSH string "option is None" ; FAILWITH } {} ;
                              UNPAIR 6 ;
                              SWAP ;
                              DROP ;
                              DUP 7 ;
                              GET 15 ;
                              DIG 5 ;
                              DUP 8 ;
                              GET 11 ;
                              DIG 6 ;
                              DUP 7 ;
                              DUP 7 ;
                              ADD ;
                              ADD ;
                              MUL ;
                              EDIV ;
                              IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                              CAR ;
                              COMPARE ;
                              GE ;
                              DIG 3 ;
                              DUP 4 ;
                              ADD ;
                              PUSH nat 0 ;
                              DUP 2 ;
                              COMPARE ;
                              GT ;
                              IF { DUP 6 ;
                                   GET 16 ;
                                   SWAP ;
                                   DIG 6 ;
                                   GET 11 ;
                                   DIG 5 ;
                                   MUL ;
                                   EDIV ;
                                   IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                   CAR ;
                                   COMPARE ;
                                   GE }
                                 { DIG 3 ; DIG 5 ; DROP 3 ; PUSH bool False } ;
                              AND ;
                              IF { SOME } { DROP ; NONE bytes } ;
                              DUP ;
                              DUP 4 ;
                              GET 3 ;
                              PUSH nat 1 ;
                              DIG 5 ;
                              CAR ;
                              ADD ;
                              PAIR 3 ;
                              SOME ;
                              SWAP ;
                              IF_NONE { SWAP } { DIG 2 ; SWAP ; SOME ; UPDATE 8 } } } } ;
                 SENDER ;
                 DUP ;
                 DIG 8 ;
                 SWAP ;
                 EXEC ;
                 VOTING_POWER ;
                 UNIT ;
                 DIG 10 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 DUP ;
                 DIG 9 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 DUP 3 ;
                 GET 3 ;
                 IF_LEFT { DROP ; PUSH string "NOT_PROMOTION_PERIOD" ; FAILWITH } { DROP } ;
                 DUP 3 ;
                 GET 7 ;
                 IF_NONE { PUSH string "PROMOTION_PERIOD_CONTEXT_NOT_EXIST" ; FAILWITH } {} ;
                 DUP ;
                 GET 3 ;
                 DUP 4 ;
                 MEM ;
                 NOT ;
                 IF {} { PUSH string "PROMOTION_ALREADY_VOTED" ; FAILWITH } ;
                 PUSH string "pass" ;
                 DUP 7 ;
                 COMPARE ;
                 EQ ;
                 DUP 9 ;
                 DUP 8 ;
                 COMPARE ;
                 EQ ;
                 DUP 11 ;
                 DUP 9 ;
                 COMPARE ;
                 EQ ;
                 OR ;
                 OR ;
                 IF {} { PUSH string "INCORRECT_VOTE_VALUE" ; FAILWITH } ;
                 DIG 8 ;
                 DUP 7 ;
                 COMPARE ;
                 EQ ;
                 IF { DIG 5 ; DIG 7 ; DROP 2 ; DUP ; DIG 2 ; DUP 3 ; GET 5 ; ADD ; UPDATE 5 }
                    { DIG 7 ;
                      DIG 6 ;
                      COMPARE ;
                      EQ ;
                      IF { DUP ; DIG 2 ; DUP 3 ; GET 7 ; ADD ; UPDATE 7 }
                         { DUP ; DIG 2 ; DUP 3 ; GET 9 ; ADD ; UPDATE 9 } } ;
                 DIG 4 ;
                 IF_NONE
                   { NIL operation }
                   { NIL operation ;
                     SWAP ;
                     EMIT %voting_finished
                       (pair (nat %finished_at_period_index)
                             (or %finished_at_period_type (unit %proposal) (unit %promotion))
                             (option %winner_payload bytes)) ;
                     CONS } ;
                 DIG 5 ;
                 DIG 5 ;
                 DIG 3 ;
                 DIG 4 ;
                 GET 3 ;
                 UNIT ;
                 DIG 6 ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 UPDATE 3 ;
                 SOME ;
                 UPDATE 7 ;
                 SOME ;
                 UPDATE 3 }
               { DIG 4 ;
                 DIG 5 ;
                 DROP 2 ;
                 IF_LEFT
                   { DUP 2 ;
                     CAR ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     DUP 3 ;
                     GET 3 ;
                     IF_NONE
                       { NONE (pair nat (or unit unit) (option bytes)) ;
                         NONE bytes ;
                         NONE (pair bytes (big_map address unit) nat nat nat nat) ;
                         TOTAL_VOTING_POWER ;
                         NONE bytes ;
                         NONE nat ;
                         EMPTY_BIG_MAP bytes (pair bytes address nat) ;
                         EMPTY_BIG_MAP address (set bytes) ;
                         PAIR 5 ;
                         UNIT ;
                         LEFT unit ;
                         DIG 5 ;
                         PAIR 5 }
                       { DUP ;
                         CAR ;
                         DUP 3 ;
                         COMPARE ;
                         EQ ;
                         IF { SWAP ; DROP ; NONE (pair nat (or unit unit) (option bytes)) ; SWAP }
                            { DUP 4 ;
                              CAR ;
                              DUP 2 ;
                              GET 3 ;
                              IF_LEFT
                                { DROP ;
                                  DUP 2 ;
                                  GET 5 ;
                                  DUP 2 ;
                                  GET 13 ;
                                  DUP 2 ;
                                  GET 8 ;
                                  MUL ;
                                  DIG 2 ;
                                  GET 11 ;
                                  DUP 3 ;
                                  GET 5 ;
                                  IF_NONE { PUSH nat 0 } {} ;
                                  MUL ;
                                  COMPARE ;
                                  GE ;
                                  IF { GET 7 } { DROP ; NONE bytes } ;
                                  IF_NONE
                                    { DUP ;
                                      GET 5 ;
                                      GET 5 ;
                                      IF_NONE { PUSH bool False } { DROP ; PUSH bool True } ;
                                      IF { NONE bytes ;
                                           DUP 2 ;
                                           GET 3 ;
                                           PUSH nat 1 ;
                                           DUP 4 ;
                                           CAR ;
                                           ADD ;
                                           PAIR 3 ;
                                           SOME }
                                         { NONE (pair nat (or unit unit) (option bytes)) } ;
                                      SWAP ;
                                      GET 8 ;
                                      NONE (pair bytes (big_map address unit) nat nat nat nat) ;
                                      TOTAL_VOTING_POWER ;
                                      NONE bytes ;
                                      NONE nat ;
                                      EMPTY_BIG_MAP bytes (pair bytes address nat) ;
                                      EMPTY_BIG_MAP address (set bytes) ;
                                      PAIR 5 ;
                                      UNIT ;
                                      LEFT unit ;
                                      DIG 5 ;
                                      PAIR 5 }
                                    { PUSH nat 1 ;
                                      DUP 3 ;
                                      CAR ;
                                      ADD ;
                                      DUP ;
                                      DUP 5 ;
                                      COMPARE ;
                                      EQ ;
                                      IF { DROP ;
                                           NONE (pair nat (or unit unit) (option bytes)) ;
                                           DIG 2 ;
                                           DIG 3 ;
                                           UPDATE 1 ;
                                           UNIT ;
                                           RIGHT unit ;
                                           UPDATE 3 ;
                                           TOTAL_VOTING_POWER ;
                                           PUSH nat 0 ;
                                           PUSH nat 0 ;
                                           PUSH nat 0 ;
                                           EMPTY_BIG_MAP address unit ;
                                           DIG 7 ;
                                           PAIR 6 ;
                                           SOME ;
                                           UPDATE 7 }
                                         { DUP 3 ;
                                           SWAP ;
                                           UPDATE 1 ;
                                           UNIT ;
                                           RIGHT unit ;
                                           UPDATE 3 ;
                                           TOTAL_VOTING_POWER ;
                                           PUSH nat 0 ;
                                           PUSH nat 0 ;
                                           PUSH nat 0 ;
                                           EMPTY_BIG_MAP address unit ;
                                           DIG 6 ;
                                           PAIR 6 ;
                                           SOME ;
                                           UPDATE 7 ;
                                           NONE bytes ;
                                           DUP 2 ;
                                           GET 3 ;
                                           PUSH nat 1 ;
                                           DIG 3 ;
                                           CAR ;
                                           ADD ;
                                           PAIR 3 ;
                                           SOME ;
                                           SWAP ;
                                           GET 8 ;
                                           NONE (pair bytes (big_map address unit) nat nat nat nat) ;
                                           TOTAL_VOTING_POWER ;
                                           NONE bytes ;
                                           NONE nat ;
                                           EMPTY_BIG_MAP bytes (pair bytes address nat) ;
                                           EMPTY_BIG_MAP address (set bytes) ;
                                           PAIR 5 ;
                                           UNIT ;
                                           LEFT unit ;
                                           DIG 5 ;
                                           PAIR 5 } } }
                                { DROP ;
                                  DUP 2 ;
                                  GET 8 ;
                                  NONE (pair bytes (big_map address unit) nat nat nat nat) ;
                                  TOTAL_VOTING_POWER ;
                                  NONE bytes ;
                                  NONE nat ;
                                  EMPTY_BIG_MAP bytes (pair bytes address nat) ;
                                  EMPTY_BIG_MAP address (set bytes) ;
                                  PAIR 5 ;
                                  UNIT ;
                                  LEFT unit ;
                                  DIG 6 ;
                                  PAIR 5 ;
                                  DUP 3 ;
                                  GET 7 ;
                                  IF_NONE { PUSH string "option is None" ; FAILWITH } {} ;
                                  UNPAIR 6 ;
                                  SWAP ;
                                  DROP ;
                                  DUP 7 ;
                                  GET 15 ;
                                  DIG 5 ;
                                  DUP 8 ;
                                  GET 11 ;
                                  DIG 6 ;
                                  DUP 7 ;
                                  DUP 7 ;
                                  ADD ;
                                  ADD ;
                                  MUL ;
                                  EDIV ;
                                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                  CAR ;
                                  COMPARE ;
                                  GE ;
                                  DIG 3 ;
                                  DUP 4 ;
                                  ADD ;
                                  PUSH nat 0 ;
                                  DUP 2 ;
                                  COMPARE ;
                                  GT ;
                                  IF { DUP 6 ;
                                       GET 16 ;
                                       SWAP ;
                                       DIG 6 ;
                                       GET 11 ;
                                       DIG 5 ;
                                       MUL ;
                                       EDIV ;
                                       IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                       CAR ;
                                       COMPARE ;
                                       GE }
                                     { DIG 3 ; DIG 5 ; DROP 3 ; PUSH bool False } ;
                                  AND ;
                                  IF { SOME } { DROP ; NONE bytes } ;
                                  DUP ;
                                  DUP 4 ;
                                  GET 3 ;
                                  PUSH nat 1 ;
                                  DIG 5 ;
                                  CAR ;
                                  ADD ;
                                  PAIR 3 ;
                                  SOME ;
                                  SWAP ;
                                  IF_NONE { SWAP } { DIG 2 ; SWAP ; SOME ; UPDATE 8 } } } } ;
                     SENDER ;
                     DUP ;
                     DIG 7 ;
                     SWAP ;
                     EXEC ;
                     VOTING_POWER ;
                     UNIT ;
                     DIG 9 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DUP ;
                     DIG 8 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DUP 3 ;
                     GET 3 ;
                     IF_LEFT { DIG 9 ; DROP 2 } { DROP ; DIG 8 ; FAILWITH } ;
                     DUP 6 ;
                     CAR ;
                     GET 7 ;
                     DUP 4 ;
                     GET 5 ;
                     CAR ;
                     DUP 4 ;
                     GET ;
                     IF_NONE { PUSH nat 0 } { SIZE } ;
                     COMPARE ;
                     LT ;
                     IF { DIG 7 ; DROP } { DIG 7 ; FAILWITH } ;
                     DUP 5 ;
                     PACK ;
                     SHA256 ;
                     DUP 4 ;
                     GET 5 ;
                     GET 3 ;
                     DUP 2 ;
                     GET ;
                     IF_NONE { PUSH string "PROPOSAL_NOT_FOUND" ; FAILWITH } {} ;
                     DUP 5 ;
                     GET 5 ;
                     CAR ;
                     DUP ;
                     DUP 6 ;
                     GET ;
                     IF_NONE
                       {}
                       { DUP 4 ;
                         MEM ;
                         NOT ;
                         IF {} { PUSH string "PROPOSAL_ALREADY_UPVOTED" ; FAILWITH } } ;
                     DIG 3 ;
                     DUP 3 ;
                     GET 4 ;
                     ADD ;
                     DUP 6 ;
                     GET 5 ;
                     DIG 2 ;
                     DUP 5 ;
                     DIG 6 ;
                     PAIR 3 ;
                     DIG 9 ;
                     SWAP ;
                     EXEC ;
                     UPDATE 1 ;
                     DIG 5 ;
                     IF_NONE
                       { NIL operation }
                       { NIL operation ;
                         SWAP ;
                         EMIT %voting_finished
                           (pair (nat %finished_at_period_index)
                                 (or %finished_at_period_type (unit %proposal) (unit %promotion))
                                 (option %winner_payload bytes)) ;
                         CONS } ;
                     DIG 7 ;
                     DUP 7 ;
                     DIG 3 ;
                     DIG 7 ;
                     GET 5 ;
                     GET 3 ;
                     DIG 6 ;
                     DUP 7 ;
                     UPDATE 4 ;
                     SOME ;
                     DIG 7 ;
                     UPDATE ;
                     UPDATE 3 ;
                     DUP ;
                     GET 5 ;
                     IF_NONE
                       { DIG 4 ; SOME ; UPDATE 5 ; DIG 4 ; SOME ; UPDATE 7 }
                       { DUP ;
                         DUP 7 ;
                         COMPARE ;
                         GT ;
                         IF { DROP ; DIG 4 ; SOME ; UPDATE 5 ; DIG 4 ; SOME ; UPDATE 7 }
                            { DIG 6 ;
                              DROP ;
                              DIG 5 ;
                              COMPARE ;
                              EQ ;
                              IF { NONE bytes ; UPDATE 7 } {} } } ;
                     UPDATE 5 ;
                     SOME ;
                     UPDATE 3 }
                   { PUSH nat 33 ;
                     DUP 2 ;
                     SIZE ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "INCORRECT_KERNEL_ROOT_HASH_SIZE" ; FAILWITH } ;
                     DUP 2 ;
                     CAR ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     DUP 3 ;
                     GET 3 ;
                     IF_NONE
                       { NONE (pair nat (or unit unit) (option bytes)) ;
                         NONE bytes ;
                         NONE (pair bytes (big_map address unit) nat nat nat nat) ;
                         TOTAL_VOTING_POWER ;
                         NONE bytes ;
                         NONE nat ;
                         EMPTY_BIG_MAP bytes (pair bytes address nat) ;
                         EMPTY_BIG_MAP address (set bytes) ;
                         PAIR 5 ;
                         UNIT ;
                         LEFT unit ;
                         DIG 5 ;
                         PAIR 5 }
                       { DUP ;
                         CAR ;
                         DUP 3 ;
                         COMPARE ;
                         EQ ;
                         IF { SWAP ; DROP ; NONE (pair nat (or unit unit) (option bytes)) ; SWAP }
                            { DUP 4 ;
                              CAR ;
                              DUP 2 ;
                              GET 3 ;
                              IF_LEFT
                                { DROP ;
                                  DUP 2 ;
                                  GET 5 ;
                                  DUP 2 ;
                                  GET 13 ;
                                  DUP 2 ;
                                  GET 8 ;
                                  MUL ;
                                  DIG 2 ;
                                  GET 11 ;
                                  DUP 3 ;
                                  GET 5 ;
                                  IF_NONE { PUSH nat 0 } {} ;
                                  MUL ;
                                  COMPARE ;
                                  GE ;
                                  IF { GET 7 } { DROP ; NONE bytes } ;
                                  IF_NONE
                                    { DUP ;
                                      GET 5 ;
                                      GET 5 ;
                                      IF_NONE { PUSH bool False } { DROP ; PUSH bool True } ;
                                      IF { NONE bytes ;
                                           DUP 2 ;
                                           GET 3 ;
                                           PUSH nat 1 ;
                                           DUP 4 ;
                                           CAR ;
                                           ADD ;
                                           PAIR 3 ;
                                           SOME }
                                         { NONE (pair nat (or unit unit) (option bytes)) } ;
                                      SWAP ;
                                      GET 8 ;
                                      NONE (pair bytes (big_map address unit) nat nat nat nat) ;
                                      TOTAL_VOTING_POWER ;
                                      NONE bytes ;
                                      NONE nat ;
                                      EMPTY_BIG_MAP bytes (pair bytes address nat) ;
                                      EMPTY_BIG_MAP address (set bytes) ;
                                      PAIR 5 ;
                                      UNIT ;
                                      LEFT unit ;
                                      DIG 5 ;
                                      PAIR 5 }
                                    { PUSH nat 1 ;
                                      DUP 3 ;
                                      CAR ;
                                      ADD ;
                                      DUP ;
                                      DUP 5 ;
                                      COMPARE ;
                                      EQ ;
                                      IF { DROP ;
                                           NONE (pair nat (or unit unit) (option bytes)) ;
                                           DIG 2 ;
                                           DIG 3 ;
                                           UPDATE 1 ;
                                           UNIT ;
                                           RIGHT unit ;
                                           UPDATE 3 ;
                                           TOTAL_VOTING_POWER ;
                                           PUSH nat 0 ;
                                           PUSH nat 0 ;
                                           PUSH nat 0 ;
                                           EMPTY_BIG_MAP address unit ;
                                           DIG 7 ;
                                           PAIR 6 ;
                                           SOME ;
                                           UPDATE 7 }
                                         { DUP 3 ;
                                           SWAP ;
                                           UPDATE 1 ;
                                           UNIT ;
                                           RIGHT unit ;
                                           UPDATE 3 ;
                                           TOTAL_VOTING_POWER ;
                                           PUSH nat 0 ;
                                           PUSH nat 0 ;
                                           PUSH nat 0 ;
                                           EMPTY_BIG_MAP address unit ;
                                           DIG 6 ;
                                           PAIR 6 ;
                                           SOME ;
                                           UPDATE 7 ;
                                           NONE bytes ;
                                           DUP 2 ;
                                           GET 3 ;
                                           PUSH nat 1 ;
                                           DIG 3 ;
                                           CAR ;
                                           ADD ;
                                           PAIR 3 ;
                                           SOME ;
                                           SWAP ;
                                           GET 8 ;
                                           NONE (pair bytes (big_map address unit) nat nat nat nat) ;
                                           TOTAL_VOTING_POWER ;
                                           NONE bytes ;
                                           NONE nat ;
                                           EMPTY_BIG_MAP bytes (pair bytes address nat) ;
                                           EMPTY_BIG_MAP address (set bytes) ;
                                           PAIR 5 ;
                                           UNIT ;
                                           LEFT unit ;
                                           DIG 5 ;
                                           PAIR 5 } } }
                                { DROP ;
                                  DUP 2 ;
                                  GET 8 ;
                                  NONE (pair bytes (big_map address unit) nat nat nat nat) ;
                                  TOTAL_VOTING_POWER ;
                                  NONE bytes ;
                                  NONE nat ;
                                  EMPTY_BIG_MAP bytes (pair bytes address nat) ;
                                  EMPTY_BIG_MAP address (set bytes) ;
                                  PAIR 5 ;
                                  UNIT ;
                                  LEFT unit ;
                                  DIG 6 ;
                                  PAIR 5 ;
                                  DUP 3 ;
                                  GET 7 ;
                                  IF_NONE { PUSH string "option is None" ; FAILWITH } {} ;
                                  UNPAIR 6 ;
                                  SWAP ;
                                  DROP ;
                                  DUP 7 ;
                                  GET 15 ;
                                  DIG 5 ;
                                  DUP 8 ;
                                  GET 11 ;
                                  DIG 6 ;
                                  DUP 7 ;
                                  DUP 7 ;
                                  ADD ;
                                  ADD ;
                                  MUL ;
                                  EDIV ;
                                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                  CAR ;
                                  COMPARE ;
                                  GE ;
                                  DIG 3 ;
                                  DUP 4 ;
                                  ADD ;
                                  PUSH nat 0 ;
                                  DUP 2 ;
                                  COMPARE ;
                                  GT ;
                                  IF { DUP 6 ;
                                       GET 16 ;
                                       SWAP ;
                                       DIG 6 ;
                                       GET 11 ;
                                       DIG 5 ;
                                       MUL ;
                                       EDIV ;
                                       IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                       CAR ;
                                       COMPARE ;
                                       GE }
                                     { DIG 3 ; DIG 5 ; DROP 3 ; PUSH bool False } ;
                                  AND ;
                                  IF { SOME } { DROP ; NONE bytes } ;
                                  DUP ;
                                  DUP 4 ;
                                  GET 3 ;
                                  PUSH nat 1 ;
                                  DIG 5 ;
                                  CAR ;
                                  ADD ;
                                  PAIR 3 ;
                                  SOME ;
                                  SWAP ;
                                  IF_NONE { SWAP } { DIG 2 ; SWAP ; SOME ; UPDATE 8 } } } } ;
                     SENDER ;
                     DUP ;
                     DIG 7 ;
                     SWAP ;
                     EXEC ;
                     VOTING_POWER ;
                     UNIT ;
                     DIG 9 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     DUP 6 ;
                     CAR ;
                     GET 9 ;
                     PUSH nat 0 ;
                     DUP 2 ;
                     SIZE ;
                     COMPARE ;
                     EQ ;
                     IF { DROP ; DUP ; DIG 8 ; SWAP ; EXEC ; DROP }
                        { DIG 8 ;
                          DROP ;
                          DUP 3 ;
                          MEM ;
                          IF {} { PUSH string "PROPOSER_NOT_ALLOWED" ; FAILWITH } } ;
                     DUP 3 ;
                     GET 8 ;
                     IF_NONE
                       {}
                       { PUSH string "PAYLOAD_SAME_AS_LAST_WINNER" ;
                         SWAP ;
                         PACK ;
                         DUP 7 ;
                         PACK ;
                         COMPARE ;
                         NEQ ;
                         IF { DROP } { FAILWITH } } ;
                     DUP 3 ;
                     GET 3 ;
                     IF_LEFT { DIG 9 ; DROP 2 } { DROP ; DIG 8 ; FAILWITH } ;
                     DUP 6 ;
                     CAR ;
                     GET 7 ;
                     DUP 4 ;
                     GET 5 ;
                     CAR ;
                     DUP 4 ;
                     GET ;
                     IF_NONE { PUSH nat 0 } { SIZE } ;
                     COMPARE ;
                     LT ;
                     IF { DIG 7 ; DROP } { DIG 7 ; FAILWITH } ;
                     DUP 5 ;
                     PACK ;
                     SHA256 ;
                     DUP 4 ;
                     GET 5 ;
                     GET 3 ;
                     DUP 2 ;
                     MEM ;
                     NOT ;
                     IF {} { PUSH string "PROPOSAL_ALREADY_CREATED" ; FAILWITH } ;
                     DUP 4 ;
                     GET 5 ;
                     DUP 5 ;
                     GET 5 ;
                     CAR ;
                     DUP 3 ;
                     DUP 6 ;
                     PAIR 3 ;
                     DIG 9 ;
                     SWAP ;
                     EXEC ;
                     UPDATE 1 ;
                     DUP 5 ;
                     GET 5 ;
                     GET 3 ;
                     DUP 4 ;
                     DIG 5 ;
                     DUP 9 ;
                     PAIR 3 ;
                     DIG 3 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     UPDATE 3 ;
                     DIG 3 ;
                     IF_NONE
                       { NIL operation }
                       { NIL operation ;
                         SWAP ;
                         EMIT %voting_finished
                           (pair (nat %finished_at_period_index)
                                 (or %finished_at_period_type (unit %proposal) (unit %promotion))
                                 (option %winner_payload bytes)) ;
                         CONS } ;
                     DIG 5 ;
                     DIG 4 ;
                     DUP 4 ;
                     GET 5 ;
                     IF_NONE
                       { DIG 3 ; DIG 4 ; SOME ; UPDATE 5 ; DIG 4 ; SOME ; UPDATE 7 }
                       { DUP ;
                         DUP 7 ;
                         COMPARE ;
                         GT ;
                         IF { DROP ; DIG 3 ; DIG 4 ; SOME ; UPDATE 5 ; DIG 4 ; SOME ; UPDATE 7 }
                            { DIG 6 ;
                              DROP ;
                              DIG 5 ;
                              COMPARE ;
                              EQ ;
                              IF { DIG 3 ; NONE bytes ; UPDATE 7 } { DIG 3 } } } ;
                     UPDATE 5 ;
                     SOME ;
                     UPDATE 3 } } ;
             SWAP } ;
         PAIR } ;
  view "get_voting_state"
       unit
       (pair (pair %voting_context
                (nat %period_index)
                (or %period_type (unit %proposal) (unit %promotion))
                (pair %proposal_period
                   (option %max_upvotes_voting_power nat)
                   (option %winner_candidate bytes)
                   (nat %total_voting_power))
                (option %promotion_period
                   (pair (bytes %payload)
                         (nat %yay_voting_power)
                         (nat %nay_voting_power)
                         (nat %pass_voting_power)
                         (nat %total_voting_power)))
                (option %last_winner_payload bytes))
             (option %finished_voting
                (pair (nat %finished_at_period_index)
                      (or %finished_at_period_type (unit %proposal) (unit %promotion))
                      (option %winner_payload bytes))))
       { CDR ;
         DUP ;
         CAR ;
         DUP ;
         CAR ;
         LEVEL ;
         SUB ;
         ISNAT ;
         IF_NONE
           { DROP ; PUSH string "CURRENT_LEVEL_LESS_THAN_START_LEVEL" ; FAILWITH }
           { SWAP ;
             GET 3 ;
             SWAP ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR } ;
         DUP 2 ;
         GET 3 ;
         IF_NONE
           { SWAP ;
             DROP ;
             NONE (pair nat (or unit unit) (option bytes)) ;
             NONE bytes ;
             NONE (pair bytes (big_map address unit) nat nat nat nat) ;
             TOTAL_VOTING_POWER ;
             NONE bytes ;
             NONE nat ;
             EMPTY_BIG_MAP bytes (pair bytes address nat) ;
             EMPTY_BIG_MAP address (set bytes) ;
             PAIR 5 ;
             UNIT ;
             LEFT unit ;
             DIG 5 ;
             PAIR 5 }
           { DUP ;
             CAR ;
             DUP 3 ;
             COMPARE ;
             EQ ;
             IF { SWAP ; DIG 2 ; DROP 2 ; NONE (pair nat (or unit unit) (option bytes)) ; SWAP }
                { DIG 2 ;
                  CAR ;
                  DUP 2 ;
                  GET 3 ;
                  IF_LEFT
                    { DROP ;
                      DUP 2 ;
                      GET 5 ;
                      DUP 2 ;
                      GET 13 ;
                      DUP 2 ;
                      GET 8 ;
                      MUL ;
                      DIG 2 ;
                      GET 11 ;
                      DUP 3 ;
                      GET 5 ;
                      IF_NONE { PUSH nat 0 } {} ;
                      MUL ;
                      COMPARE ;
                      GE ;
                      IF { GET 7 } { DROP ; NONE bytes } ;
                      IF_NONE
                        { DUP ;
                          GET 5 ;
                          GET 5 ;
                          IF_NONE { PUSH bool False } { DROP ; PUSH bool True } ;
                          IF { NONE bytes ;
                               DUP 2 ;
                               GET 3 ;
                               PUSH nat 1 ;
                               DUP 4 ;
                               CAR ;
                               ADD ;
                               PAIR 3 ;
                               SOME }
                             { NONE (pair nat (or unit unit) (option bytes)) } ;
                          SWAP ;
                          GET 8 ;
                          NONE (pair bytes (big_map address unit) nat nat nat nat) ;
                          TOTAL_VOTING_POWER ;
                          NONE bytes ;
                          NONE nat ;
                          EMPTY_BIG_MAP bytes (pair bytes address nat) ;
                          EMPTY_BIG_MAP address (set bytes) ;
                          PAIR 5 ;
                          UNIT ;
                          LEFT unit ;
                          DIG 5 ;
                          PAIR 5 }
                        { PUSH nat 1 ;
                          DUP 3 ;
                          CAR ;
                          ADD ;
                          DUP ;
                          DUP 5 ;
                          COMPARE ;
                          EQ ;
                          IF { DROP ;
                               NONE (pair nat (or unit unit) (option bytes)) ;
                               DIG 2 ;
                               DIG 3 ;
                               UPDATE 1 ;
                               UNIT ;
                               RIGHT unit ;
                               UPDATE 3 ;
                               TOTAL_VOTING_POWER ;
                               PUSH nat 0 ;
                               PUSH nat 0 ;
                               PUSH nat 0 ;
                               EMPTY_BIG_MAP address unit ;
                               DIG 7 ;
                               PAIR 6 ;
                               SOME ;
                               UPDATE 7 }
                             { DUP 3 ;
                               SWAP ;
                               UPDATE 1 ;
                               UNIT ;
                               RIGHT unit ;
                               UPDATE 3 ;
                               TOTAL_VOTING_POWER ;
                               PUSH nat 0 ;
                               PUSH nat 0 ;
                               PUSH nat 0 ;
                               EMPTY_BIG_MAP address unit ;
                               DIG 6 ;
                               PAIR 6 ;
                               SOME ;
                               UPDATE 7 ;
                               NONE bytes ;
                               DUP 2 ;
                               GET 3 ;
                               PUSH nat 1 ;
                               DIG 3 ;
                               CAR ;
                               ADD ;
                               PAIR 3 ;
                               SOME ;
                               SWAP ;
                               GET 8 ;
                               NONE (pair bytes (big_map address unit) nat nat nat nat) ;
                               TOTAL_VOTING_POWER ;
                               NONE bytes ;
                               NONE nat ;
                               EMPTY_BIG_MAP bytes (pair bytes address nat) ;
                               EMPTY_BIG_MAP address (set bytes) ;
                               PAIR 5 ;
                               UNIT ;
                               LEFT unit ;
                               DIG 5 ;
                               PAIR 5 } } }
                    { DROP ;
                      DUP 2 ;
                      GET 8 ;
                      NONE (pair bytes (big_map address unit) nat nat nat nat) ;
                      TOTAL_VOTING_POWER ;
                      NONE bytes ;
                      NONE nat ;
                      EMPTY_BIG_MAP bytes (pair bytes address nat) ;
                      EMPTY_BIG_MAP address (set bytes) ;
                      PAIR 5 ;
                      UNIT ;
                      LEFT unit ;
                      DIG 6 ;
                      PAIR 5 ;
                      DUP 3 ;
                      GET 7 ;
                      IF_NONE { PUSH string "option is None" ; FAILWITH } {} ;
                      UNPAIR 6 ;
                      SWAP ;
                      DROP ;
                      DUP 7 ;
                      GET 15 ;
                      DIG 5 ;
                      DUP 8 ;
                      GET 11 ;
                      DIG 6 ;
                      DUP 7 ;
                      DUP 7 ;
                      ADD ;
                      ADD ;
                      MUL ;
                      EDIV ;
                      IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                      CAR ;
                      COMPARE ;
                      GE ;
                      DIG 3 ;
                      DUP 4 ;
                      ADD ;
                      PUSH nat 0 ;
                      DUP 2 ;
                      COMPARE ;
                      GT ;
                      IF { DUP 6 ;
                           GET 16 ;
                           SWAP ;
                           DIG 6 ;
                           GET 11 ;
                           DIG 5 ;
                           MUL ;
                           EDIV ;
                           IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                           CAR ;
                           COMPARE ;
                           GE }
                         { DIG 3 ; DIG 5 ; DROP 3 ; PUSH bool False } ;
                      AND ;
                      IF { SOME } { DROP ; NONE bytes } ;
                      DUP ;
                      DUP 4 ;
                      GET 3 ;
                      PUSH nat 1 ;
                      DIG 5 ;
                      CAR ;
                      ADD ;
                      PAIR 3 ;
                      SOME ;
                      SWAP ;
                      IF_NONE { SWAP } { DIG 2 ; SWAP ; SOME ; UPDATE 8 } } } } ;
         PAIR ;
         DUP ;
         CAR ;
         DUP ;
         GET 5 ;
         DIG 2 ;
         CDR ;
         DUP 3 ;
         GET 8 ;
         DUP 4 ;
         GET 7 ;
         IF_NONE
           { NONE (pair bytes nat nat nat nat) }
           { DUP ;
             GET 10 ;
             DUP 2 ;
             GET 9 ;
             DUP 3 ;
             GET 7 ;
             DUP 4 ;
             GET 5 ;
             DIG 4 ;
             CAR ;
             PAIR 5 ;
             SOME } ;
         DUP 4 ;
         GET 8 ;
         DUP 5 ;
         GET 7 ;
         DIG 5 ;
         GET 5 ;
         PAIR 3 ;
         DUP 5 ;
         GET 3 ;
         DIG 5 ;
         CAR ;
         PAIR 5 ;
         PAIR } ;
  view "get_period_remaining_blocks"
       unit
       nat
       { CDR ;
         CAR ;
         DUP ;
         CAR ;
         LEVEL ;
         SUB ;
         SWAP ;
         GET 3 ;
         SWAP ;
         ISNAT ;
         IF_NONE
           { DROP ; PUSH string "CURRENT_LEVEL_LESS_THAN_START_LEVEL" ; FAILWITH }
           { DUP 2 ;
             SWAP ;
             EDIV ;
             IF_NONE { PUSH string "MOD by 0" ; FAILWITH } {} ;
             CDR ;
             SWAP ;
             SUB ;
             ISNAT ;
             IF_NONE { PUSH string "option is None" ; FAILWITH } {} } } ;
  view "get_upgrade_payload"
       (pair (bytes %kernel_root_hash) (timestamp %activation_timestamp))
       bytes
       { CAR ;
         UNPAIR ;
         SWAP ;
         PACK ;
         UNPACK nat ;
         IF_NONE { PUSH string "option is None" ; FAILWITH } {} ;
         BYTES ;
         PUSH bytes 0x ;
         PUSH int 1 ;
         PUSH int 1 ;
         DUP 4 ;
         SIZE ;
         SUB ;
         PUSH int 0 ;
         DUP 2 ;
         DUP 2 ;
         COMPARE ;
         LE ;
         LOOP { DUP ;
                DUG 3 ;
                DIP 3
                    { ISNAT ;
                      IF_NONE { PUSH string "option is None" ; FAILWITH } {} ;
                      SWAP ;
                      DUP 3 ;
                      PUSH nat 1 ;
                      DIG 3 ;
                      SLICE ;
                      IF_NONE { PUSH string "SLICE" ; FAILWITH } {} ;
                      CONCAT } ;
                DUP 3 ;
                ADD ;
                DUP 2 ;
                DUP 2 ;
                COMPARE ;
                LE } ;
         DROP 3 ;
         SWAP ;
         DROP ;
         DUP ;
         SIZE ;
         INT ;
         PUSH int 1 ;
         PUSH int 1 ;
         PUSH nat 8 ;
         SUB ;
         DIG 2 ;
         DUP 2 ;
         DUP 2 ;
         COMPARE ;
         LE ;
         LOOP { DUP ;
                DUG 3 ;
                DIP 3 { DROP ; PUSH bytes 0x00 ; SWAP ; CONCAT } ;
                DUP 3 ;
                ADD ;
                DUP 2 ;
                DUP 2 ;
                COMPARE ;
                LE } ;
         DROP 3 ;
         NIL bytes ;
         SWAP ;
         CONS ;
         PUSH bytes 0x88 ;
         CONS ;
         SWAP ;
         CONS ;
         PUSH bytes 0xeba1 ;
         CONS ;
         CONCAT } }

